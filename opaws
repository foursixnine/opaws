#!/usr/bin/env perl
use Mojolicious::Lite;
use Mojo::Log;
use JSON;
use Data::Dumper;
my $log = Mojo::Log->new;

# Documentation browser under "/perldoc"
plugin 'PODRenderer';

get '/' => sub {
  my $c = shift;
  $c->render(template => 'index');
};

get '/clone/:id/:src_host/' => sub {
  my $c = shift;
  my $job_id = $c->param('id');
  my $src_host = "https://openqa.".$c->param('src_host').".org";
  my $cmd = "/usr/share/openqa/script/clone_job.pl --host http://openqa.eureka.lab.zarate.net.ve --skip-download --from $src_host $job_id";
  $log->debug($cmd);
  my $out = generate_speech("Cloned job $job_id");

  my $response = `$cmd`;
  $response =~ s/#/Number/;
  ($response) =~ /:/;

  $c->stash(response => $response);
  $c->stash(out => $out);
  $c->render(template => 'clone');
};

get '/restart/job/:id' => sub {
  my $c = shift;
  my $job_id = $c->param('id');
  my $cmd = "/usr/share/openqa/script/client --json-output jobs/$job_id/restart post";
  $log->debug($cmd);
  my $response = decode_json(`$cmd`);
  my @jobresult = $response->{result};
  # $job = decode_json($job);
  #$log->debug(Dumper($jobresult[0]));
  #$log->debug(scalar \@jobresult);

  my $out = generate_speech("Restarted job $job_id");
  $log->debug(Dumper($out));

  if ($jobresult[0]){
    $c->stash(jobs => $response->{result});
    $c->stash(parent_id => $job_id);
    $c->stash(out => $out);
    $c->render(template => 'restart_job');
  } else {
    $c->redirect_to("/");
  }

};

app->secrets(["Skynet is comming! :)"]);
app->start;

sub generate_speech {
    my $input = shift;
    my $speech = {
        outputSpeech => {
            type => "SSML",
            ssml => "<speak>$input</speak>",
            }
        };

    return encode_json($speech);
}

# All responses should be a combination between json and ssml tags
# https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/speech-synthesis-markup-language-ssml-reference
__DATA__

@@ index.html.ep
% layout 'default';
% title 'OpenQA Alexa Web Service (OpAWS)';
<h1>Clone Job</h1>
bleh

@@ clone.html.ep
% layout 'default';
% title 'Clone job';
<h1>Clone Job</h1>
<h2><%= $response %></h2>
<p><%= $out %><p>

@@ restart_job.html.ep
% layout 'default';
% title 'restart job';
<h1>job <%= $parent_id %> restarted</h1>
% for my $job (@$jobs) {
    <p>Job <%=$job %> has been triggered<p>
% }
<p><%= $out %><p>

@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head><title><%= title %></title></head>
  <body><%= content %></body>
</html>
